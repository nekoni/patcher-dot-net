<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>155, 17</value>
  </metadata>
  <data name="imageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADE
        EQAAAk1TRnQBSQFMAgEBBAEAAQkBAAEEAQABEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEYBgABGP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AIQAAb8BAwECAYsBDAEGAXwBDgEH
        AXoBDgEHAXoBDgEHAXoBDgEHAXoBDgEHAXoBDgEHAXoBDgEHAXoBDgEHAXwBDgEHAYsBDAEGAb8BAwEC
        AdI4AAG3AaIBkwFjAUkBNQFjAUkBNQFjAUkBNQFjAUkBNQFjAUkBNQFjAUkBNQFjAUkBNUgAAc0BsQGo
        Af8B4AHQAf8B3gHNAf8B3AHJAf8B2wHGAf4B1wHDAf4B1wHDAf4B1wHDAf4B1wHDAf4B1wHDAf4B1wHD
        AeABmwGPAa8BBgEDAdIOAAICAQkCHgFTAkIBjAJQAagCPQGpAiEBjQIHAVMCAAEJEgABtwGiAZMB9QHe
        AdMB3QHQAckB2gHMAcQB1wHHAb8B1AHDAboB0QG/AbUBYwFJATUSAAF1AYQBjwFsAXoBhQFgAW0BdwFR
        AV0BZgFCAUwBVAExAToBQQEjASoBMAEWARwBIQEOARMBGAEOARMBGAEOARMBGAEOARMBGAEOARMBGAEO
        ARMBGAEOARMBGAkAAcwBtQGpAf8B6wHYAf8B6AHSAf8B5QHMAf8B4wHHAf8B4QHDAf8B3gG9Af8B2wG3
        Af8B2AGxAf8B1QGrAf8B0wGnAeABmwGQAa0BBgEDAdIKAAECAgYBbwI0AesCdQH/Ap4B/wKwAf8CqgH/
        Ao0B/wJNAf4CBgHmAgABawIAAQIGAAG3AaIBkwFjAUkBNQG3AaIBkwH3AeQB2wHqAZsBcwHqAZUBawHq
        AZABYgHqAYoBWgHUAcMBuwFjAUkBNQFjAUkBNQFjAUkBNQFjAUkBNQFjAUkBNQFjAUkBNQFjAUkBNQF3
        AYcBkgGiAd8B8AFwAc0B6gFJAbgB4gE3Aa4B2wEtAakB2QEmAaEB0gEhAZgBxwEgAY4BvAEeAYMBrgEZ
        AX8BqwEVAXwBqQEbAXcBnwEfAXIBlgEWARwBIQkAAdABuAGsAf8B7gHeAcMB2AKtAbgBkQGuAbkBlQGv
        AbwBmgGwAb0BngGwAb4BoQGyAcABpQGyAcEBqQH/AdUBqwHgAZsBkAGtAQYBAwHSBwABBgIAAakCNwH9
        AnsB/wKJAf8CnwH/ArIB/wK5Af8CsQH/AqMB/wKRAf4CPwHyAgABnwIAAQYDAAG3AaIBkwEBAacB6AG7
        AaYBlwH5AekB4gH4AeUB3QH2AeIB2AH1Ad8B0wH0AdsBzgHZAckBwQFjAUkBNQHbAb8BrQHbAbsBpwHb
        AbsBpwHbAbsBpwHPAbQBowFjAUkBNQF6AYoBlQGqAegB9gGVAeUB/AGEAd8B+wF1AdYB+gFqAdAB9wFd
        AcYB9AFQAb4B8AFBAbQB7AE1AaoB6AErAaQB5gEgAZoB3wEWAZAB1wEbAXcBnwEgAScBLQkAAdMBvAGv
        Af8B8QHjAUIBlwFKAUIBngFOAUMBnwFTAUQBogFYAUUBoAFdAXoB1gGrAZAB7QHSAZEB8QHdAf8B2AGx
        AeABmwGQAa0BBgEDAdIHAAGJAjYB+QJRAf8CYwH/Am4B/wI4AZoCFQEcAhUBHAIvAUACZAGZAoIB+gJs
        Af8CSQHxAgABggMAAbcBogGTARMBsQHsAcEBqwGcAfoB7wLqAZsBcwHqAZUBawHqAZABYgHqAYoBWgHQ
        AeEBzgFjAUkBNQH3AeUB3QH2AeIB2QH2AeAB1QH0AdwB0QHPAbQBowFjAUkBNQF9AY4BmAGwAeoB9gGf
        AekB+wGSAeQB/AGBAd0B+wF1AdYB+gFoAc4B9wFdAcYB9AFNAbwB8AFBAbQB7AE1AaoB6AEqAaMB5gEd
        AZYB3AEVAXwBqQEtATQBOwkAAdgBwAGyAf8B9AHoAQoBXQEKAQABPwIAAT8CAAFGAQABIAF7ASABZAG8
        AXcBigHhAbQBigHiAbgB/wHbAbcB4AGbAZABrQEGAQMB0gQAAScCGAHtAiwB/wI8Af8CSwH/AmIB/wIu
        Af4CAQGDAgABAQYAAhsBMAJbAeUCRQH/AigB5AIAAScBuwGmAZcBNQHBAfABxwGyAaMB/AH0AfAB+AHl
        Ad0B9gHiAdgB9QHfAdMB9AHbAc4B8QHsAekBYwFJATUB+AHoAeEB9wHlAd0B9wHjAdkB9QHfAdUBzwG0
        AaMBYwFJATUBgAGRAZwBtgHtAfgBqgHsAfsBmwHoAfsBjwHjAfwBgQHdAfsBcQHVAfkBaAHOAfcBWwHF
        AfQBTQG8AfABPQGyAewBMgGpAegBJAGeAeIBEAGCAbQBOwFDAUsJAAHcAcQBtAH/AfcB7gFYAawBWAEA
        AToCAAFDAgABWwEAAW0BxQFtAWABwAFgAdABlgEUAfQBjQEAAf8B3gG9AeABmwGQAa0BBgEDAdIEAAFz
        AhEB/AIfAf8CMwHsAjwB/wJBAf8CUwH+Ai8B+gIAAaACAAEIBgACGQE+AjcB/gIqAfwCAgFuAcEBqwGc
        AV8B0QHzAc8BuQGpAf0B+QH2AeoBmwFzAeoBlQFrAeoBkAFiAeoBigFaAfEB7AHpAWMBSQE1AfkB6wHk
        AfgB6AHgAfcB5QHcAfYB4gHYAc8BtAGjAWMBSQE1AYMBlQGfAb4B8AH5AasB8AH3AaUB7AH7AZgB5wH7
        AYkB4QH8AX8B3QH7AXEB1QH5AWUBzQH3AVgBxAHzAUsBuwHwAT0BsgHsASwBpAHjAQwBigG/AUkBUwFc
        CQAB3wHHAbcB/wH5AfMBWQG9AVkBAAFaAQABCQFwAQkBbQF3AQ4BzgFoAQAB0AFqAQAB0wFtAQAB1AFu
        AQAB/wHhAcMB4AGbAZABrQEGAQMB0gQAAZ4CAAH/AhYB+gICARkCJQGoAjQB/wIxAf8CPAH/Ai8B9gIB
        AbMCAAEUBgACHwHWAg4B/wIHAZ4BxwGyAaMBhwHhAfUB2AHCAbIB/gH8AfsB/AH0AfAB/AH0AfAB/AH0
        AfAB/AH0AfAB8QHsAekBYwFJATUB+gHuAegB+AHrAeQB+AHoAeAB9wHlAdwB0AG1AaUBYwFJATUBhgGZ
        AaMBvgHwAfkBtgHtAfgBsAHuAfoBpAHrAfoBlQHmAfsBiQHhAfwBfQHcAfwBcQHVAfkBZQHNAfcBWAHE
        AfMBSQG5Ae8BNQGpAecBDAGPAccBVwFjAWsJAAHkAcwBuQH/AfwB+QESAaABEgE4AYMBIwHpAeIBmwH/
        Ae4BqgHZAZoBTwG1AU4BAAG3AVABAAG4AVEBAAH/AeMBxwHhAZsBkAGtAQYBAwHSAgACAQGnAgAB/wIQ
        AeQGAAIhAYACRQH+AmkB/wJnAf8CQgH1AgIBvgIAASQDAAIJAdECAQH/AgEBpwHPAbkBqQGlAe4B9wHY
        AcIBsgHYAcIBsgHYAcIBsgHYAcIBsgHYAcIBsgHYAcIBsgHYAcIBsgG+AbMBqgH6AfEB6wH6Ae4B6AH5
        AesB4wH4AegB4AHWAcABsgFjAUkBNQGJAZwBpgG+AfAB+QG2Ae0B+AG2Ae0B+AGrAfAB9wGiAewB+gGV
        AeYB+wGJAeEB/AF9AdwB/AFvAdMB+gFjAcwB9wFVAcMB8wFJAbkB7wEZAZkBzwFjAXABegkAAegB0AG9
        Af8C/gH/AcEBTwH/AcEBTwH/AcEBTwH/AcEBTwH/AcEBTwH/AcYBWgL/Ac0BwwGFAU8B/wHlAcwB4QGb
        AZABrQEGAQMB0gIAAgEBkgJMAf8COwH7AgABLgYAAhsBXAJXAfgCkgH/ApEB/wJFAfYCAAHCAgABWwII
        AeoCAAH/AgEBlwHYAcIBsgGrAfAB9wGrAfAB9wGrAfAB9wGrAfAB9wGrAfAB9wGrAfAB9wGpAZQBhQH8
        AfgB9gH8AfYB8gH7AfMB7wH6AfAB6wH6Ae0B6AH5AesB5AHeAc4BwwFjAUkBNQGLAaABqAG+AfAB+QG+
        AfAB+QG+AfAB+QG+AfAB+QG0AfIB+AGqAewB+wGgAekB+wGVAeUB/AGKAd8B/AF/AdgB+wF0AdIB+AFo
        AcoB9AFdAcAB8QFjAXABegkAAewB1AHAA/8B+AHkAbIB+wG8AVYB+AHkAbIB+AHkAbIB+AHkAbIB+AHk
        AbIB+AHkAbIB+AHkAbIB/wHoAdIB4QGaAY8BrQEGAQMB0gQAAVQCdQH+AmoB/wIdAbYCAAENBgACFAE7
        AksB6gKaAf8CoAH/AlYB+QIBAdQCYgH7AlwB/gIAAVgB2AHCAbIB2AHCAbIB1AG/Aa4B2AHCAbIB2AHC
        AbIB2AHCAbIB1gHHAb4BpwGSAYIB/gH7AfkB/QH3AfYB/AH2AfIB+wHyAe4B+wHwAesB+QHtAecB5QHb
        AdQBYwFJATUBjQGhAaoBjQGhAaoBjQGhAaoBjQGhAaoBjQGhAaoBiwGfAagBiQGcAaYBiQGbAaYBhwGa
        AaQBhgGZAaMBhAGWAaABhAGWAaABgwGVAaABgwGVAaABdQGEAY8JAAHwAdgBwwP/Ae0BuwGLAewBuQGI
        AewBuQGIAewBuQGIAewBuQGIAewBuQGIAewBuQGIAeoBuAGKAf8B6wHYAeEBmQGOAa4BBgEDAdIEAAEJ
        Ai4B1QKsAf8CSwH6AhkBsgIAATwCAAECAwACDgEjAkIB0wKfAf8CrwH/An8B/wKrAf8CMAHZAgABCgYA
        AcwBtgGnDf8B/QL+AfwB+wH+AfoB+AH9AfgB9QH8AfUB8gH8AfMB7gH6AfAB6gH8AfQB8AFjAUkBNQGP
        AaQBrAGyAeQB7AG2Ae0B+AG2Ae0B+AGpAewB9gGSAeEB8wGNAaEBqgGxAQ4BEh4AAfQB3AHHCv8B/QH7
        Af8B+gH2Af8B+AHwAf8B9QHrAf8B9AHmAfcCswH2AaEBogHWAY4BgAG2AQgBBQHSBwABOAJeAfACtAH/
        Al8B/AI0AeECHgG9AgABlAIAAZQCFQHAAjYB+gKrAf8CvQH/AmEB8QIAAToJAAHkAYwBYAHkAYwBYAHk
        AYwBYAHiAYkBWQHfAYUBTwHdAYEBQwHZAXsBNgHWAXYBKQHTAXEBHAHPAWwBEQHNAWkBBwHLAWYBAAHL
        AWYBAAHLAWYBAAG6ASUBKAGPAaQBrAGPAaQBrAGPAaQBrAGPAaQBrAGPAaQBrAGxAQ4BEiEAAfgB4AHK
        Df8B/QH7Af8B+gH2Af8B+AHwAfwB8gHpAf8BvQFgAfwBogEiAZkBIQEZAckBBQEECwABOgJNAdwCvQH/
        AqIB/wJyAf8CaAH9AmIB/QJrAf8CoQH/Ar4B/wJQAd0CAAE9DAAB5AGMAWAB9QHGAa8B9QHGAa8B9QHD
        AaoB9AG9AaIB9AG3AZkB9AGxAY8B8wGqAYQB8wGjAXsB8wGdAXIB8wGZAWoB8wGVAWUB8wGVAWUBywFm
        NwAB/AHkAcwQ/wH+Af0B/wH7AfcB/gHzAe0B/wHYAZYBlQEiARsBxgEHAQUB0hAAAw0BcQJWAc4CjgH1
        AqkB/AKqAfwCjgH1AlcBzwINAXQCAAEPDwAB5AGMAWAB5AGMAWAB5AGMAWAB4gGJAVkB4AGFAU8B3QGB
        AUQB2QF7ATcB1gF2ASkB0wFyAR0BzwFsARABzQFoAQcBywFmAQABywFmAQABywFmNwAB/gHVAasB+gHX
        AbcB9gHUAbQB8QHPAbEB7QHLAa4B6QHHAasB5AHCAagB4QG/AaUB2wG6AaMB0wENAQsgAAERAgABKwIA
        AS0CAAEREgABQgFNAT4HAAE+AwABKAMAAUADAAEgAwABAQEAAQEGAAEBFgAD/4EABP8BwAEAAfwBPwHA
        AT8C/wHAAQAB4AEHAcABPwEAAQEBwAEAAcABAwMAAQEBwAEAAYABAQMAAQEBwAYAAQEBwAIAAWADAAEB
        AcACAAEwAwABAQHAAgABEAMAAQEBwAEAAQgEAAEBAcABAAEMBAABAQHAAQABBgQAAQEBwAMAAcACAAH/
        AcABAAGAAQEBwAEAAQEB/wHAAQEBwAEDAcABAAL/AcABAQHgAQcBwAEAAv8BwAEPAfwBPws=
</value>
  </data>
  <metadata name="contextMenuStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>